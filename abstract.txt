Artificial intelligence agents for games such as chess and go have seen tremendous success in the past few years using an algorithm called Monte Carlo tree search (MCTS). MCTS's success in various applications has been seen as a step toward a general form of artificial intelligence; however, a substantial amount of the work for MCTS has been done in perfect information games, where there is no hidden information. In chess, for example, the positions of all pieces are known by both players. Nonetheless, a general form of artificial intelligence must perform well in both perfect and imperfect information domains. This project seeks to evaluate MCTS's performance in an imperfect information environment, the card game Euchre. Euchre is a valuable environment to test MCTS due to its various sources of uncertainty. There is uncertainty in the cards an opponent has and in how one's own partner will play. Success in Euchre would support MCTS's ability to generalize to imperfect knowledge environments, and support its promise as a step toward general artificial intelligence. This research creates a MCTS library modified to support imperfect information environments, and evaluates MCTS's performance against a rule based algorithm and a baseline that randomly selects a valid action from those available. Results show that the modified MCTS algorithm outperforms the rule based algorithm and random baseline, achieving an optimal outcome nearly 10% more often than the rule based approach. The MCTS algorithm was only given the rules of Euchre and no Euchre based heuristics or optimization to guide its search. This supports the fact that even a basic, unoptimized MCTS algorithm is generalizable to both perfect and imperfect information domains.
