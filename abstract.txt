Artificial intelligence agents for games such as Chess and Go have seen tremendous success in the past few years using an algorithm called Monte Carlo tree search (MCTS). MCTS's success in various applications has been seen as a step toward a general form of artificial intelligence; however, a substantial amount of the work for MCTS has been done in perfect information environments, where there is no hidden knowledge. A general form of artificial intelligence must perform well in perfect as well as imperfect knowledge domains. This project seeks to evaluate MCTS's performance in an imperfect information environment through the card game Euchre. Success in this task would support MCTS's ability to generalize, specifically to imperfect knowledge domains, and also support its promise as a step toward general artificial intelligence. This project creates a MCTS library for the language Go modified to support imperfect information environments, and evaluates the algorithm's performance against a rule based algorithm and a random baseline. Results show that the modified MCTS implementation outperforms the rule based agent and random baseline, achieving the optimal outcome nearly 10% more often than the rule based approach. The MCTS algorithm was only given the rules of Euchre with no domain adaptation, supporting the fact that even a basic, unoptimized MCTS algorithm is generalizable to both perfect and imperfect information domains.
